title = "configuration for isolated call recognition"

[svm]

kernel = ["linear"]
C      = [0.0001, 0.001, 0.01, 0.1]
gamma  = 0.0

[features]

stacksize       = [3, 4, 5, 6, 7, 8]           # size of the stack
normalize     = "mvn"        # type of normalization

# use first n frames for noise subtraction. if 0, don't.
# using a small number of frames to model the noise also may improve
# performance
n_noise_fr  = [0, 40]

# remove DC component in the signal. this is usually a good idea
remove_dc = true

# do n-point median filter in time domain, 0 for no median filter
# if your recordings are very noisy, this might help
medfilt_t = [0, 1, 3, 5, 7]

# (n, m)-cubed median filter in spectral domain.
# similar to above, but now in spectral domain. may improve performance
# on noisy recordings
# to grid search over values, make a list of pairs, like so:
# [[11, 11], [13, 13], [15, 15]]
medfilt_s = [[0,0], [5,5], [7,7], [9,9], [11,11]]

# sample rate, make sure this is set correctly
# and that all your files have the same sample rate
fs = 16000

# These options control the spectral features:
pre_emph      = 0.97          # pre-emphasis

window_length = 0.050          # window length in seconds
window_shift  = 0.025         # window shift in seconds
nfft          = 1024          # number of components in the DFT

scale         = "mel"         # perceptual frequency scale
nfilt         = 40            # number of filters
lowerf        = 133.3333      # lower frequency of the filterbanks
upperf        = 6855.4976     # upper frequency of the filterbanks

compression   = "log"         # type of amplitude compression


deltas        = [true, false] # speed and acceleration

dct           = [true, false] # perform DCT, ie. move to cepstra
nceps         = 13            # number of cepstra

taper_filt    = true          # rescale filter sizes
